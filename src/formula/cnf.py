class CNF:
    def __init__(self, variables=set(), clauses=[]):
        self.variables = variables
        self.clauses = clauses

    def __str__(self):
        return self.to_dimacs()

    def to_dimacs(self):
        lines = ['c',
                 'c generated by mike',
                 'c']
        lines.append('p cnf {} {}'.format(len(self.variables), len(self.clauses)))
        for clause in self.clauses:
            lines.append(' '.join([str(c) for c in clause]) + ' 0')
        
        return '\n'.join(lines)
    
    def append(self, clauses):
        self.clauses.append(clauses)

    def and_cnf(self, right_cnf):
        # preserve variable names
        for name, num in right_cnf.variables.items():

    @classmethod 
    def init_from_var(cls, name):
        var_cnf = CNF()
        var_cnf.append()
